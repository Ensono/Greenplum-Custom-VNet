{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for the deployment"
            }
        },
        "internetAccess": {
            "type": "String",
            "defaultValue": "True",
            "allowedValues": [
                "True",
                "False"
            ],
            "metadata": {
                "description": "True means a Public IP address will be created for the Master node with ports 22, 5432, 28080, and 28090 open to the Internet.  False means the Master will not have a Public IP address created and a jump box will be needed to access the cluster."
            }
        },
        "subnetMask": {
            "type": "string",
            "minLength": 11,
            "maxLength": 20,
            "metadata": {
                "description": "Subnet CIDR mask used in the vnet by Greenplum.  Pick the default if uncertain how to set this parameter."
            }
        },
        "offerType": {
            "type": "string",
            "defaultValue": "byol",
            "allowedValues": [
                "byol",
                "hourly",
                "dev"
            ],
            "metadata": {
                "description": "Hidden parameter for determining which Image to use (byol, hourly, or dev)."
            }
        },
        "devImage": {
            "type": "string",
            "metadata": {
                "description": "Hidden parameter for determining which dev image to use."
            }
        },
        "devImageLocation": {
            "type": "string",
            "defaultValue": "gpdb-images",
            "metadata": {
                "description": "Hidden parameter for determining where the dev Image is located.  Used for testing gpsnap."
            }
        },
        "newGuid": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        },
        "deploymentName": {
            "type": "string",
            "defaultValue": "greenplum",
            "minLength": 3,
            "maxLength": 10,
            "metadata": {
                "description": "Deployment name consisting of 3-10 lowercase letter and numbers."
            }
        },
        "masterInstanceType": {
            "type": "string",
            "allowedValues": [
                "Standard_D13_v2",
                "Standard_H8",
                "Standard_H16"
            ],
            "metadata": {
                "description": "Master Instance Type."
            }
        },
        "segmentInstanceType": {
            "type": "string",
            "allowedValues": [
                "Standard_D13_v2",
                "Standard_H8",
                "Standard_H16"
            ],
            "metadata": {
                "description": "Segment Instance Type."
            }
        },
        "databaseVersion": {
            "type": "string",
            "allowedValues": [
                "GP5",
                "GP6"
            ],
            "metadata": {
                "description": "Database Version."
            }
        },
        "databaseName": {
            "type": "string",
            "defaultValue": "dev",
            "minLength": 3,
            "maxLength": 63,
            "metadata": {
                "description": "The name of the default database in the Greenplum cluster.  Optional components will be installed in this database."
            }
        },
        "dataDiskType": {
            "type": "string",
            "defaultValue": "SSD",
            "allowedValues": [
                "HDD",
                "SSD"
            ],
            "metadata": {
                "description": "Data disk type for data volumes."
            }
        },
        "masterDiskSize": {
            "type": "int",
            "defaultValue": 500,
            "allowedValues": [
                500,
                1000,
                2000,
                4000,
                8000,
                16000,
                32000
            ],
            "metadata": {
                "description": "Size of the data disk on the Master instance.  For Single-Instance deployments, the Master instance will have two data disks while Multi-Instance deployments, will only have one."
            }
        },
        "segmentDiskSize": {
            "type": "int",
            "defaultValue": 2000,
            "allowedValues": [
                500,
                1000,
                2000,
                4000,
                8000,
                16000,
                32000
            ],
            "metadata": {
                "description": "Size of each of the two data disks on each Segment instance. Note: This parameter is ignored for Single-Instance deployments."
            }
        },
        "segmentInstanceCount": {
            "type": "int",
            "defaultValue": 0,
            "allowedValues": [
                0,
                2,
                4,
                6,
                8,
                10,
                12,
                14,
                16,
                18,
                20,
                22,
                24,
                26,
                28,
                30,
                32,
                34,
                36,
                38,
                40,
                42,
                44,
                46,
                48,
                50,
                52,
                54,
                56,
                58,
                60,
                62,
                64
            ],
            "metadata": {
                "description": "Number of Segment instances to deploy. Pick 0 for Single-Instance deployments."
            }
        },
        "adminPublicKey": {
            "type": "string",
            "metadata": {
                "description": "SSH Public Key administrator account (gpadmin) that will have access.  SSH Password authentication has been disabled and you must provide your SSH Public Key."
            }
        }
    },
    "variables": {
        "dataDiskTypeMapping": {
            "HDD": {
                "storageAccountType": "Standard_LRS"
            },
            "SSD": {
                "storageAccountType": "StandardSSD_LRS"
            }
        },
        "instanceCount": "[add(parameters('segmentInstanceCount'), 1)]",
        "masterDataDisks": "[if(equals(parameters('segmentInstanceCount'), 0), 2, 1)]",
        "masterRaidGroups": "[if(equals(parameters('segmentInstanceCount'), 0), 2, 1)]",
        "segmentCopyCount": "[if(equals(parameters('segmentInstanceCount'), 0), 1, parameters('segmentInstanceCount'))]",
        "segmentDataDisks": 2,
        "segmentRaidGroups": "2",
        "gpdbSegmentsPerHost": "2",
        "gpVmemProtectLimit": "23400",
        "instanceSettings": {
            "Standard_D13_v2": {
                "enableAcceleratedNetworking": true
            },
            "Standard_H8": {
                "enableAcceleratedNetworking": false
            },
            "Standard_H16": {
                "enableAcceleratedNetworking": false
            }
        },
        "adminUsername": "gpadmin",
        "releaseURL": "https://s3.amazonaws.com/pivotal-greenplum-release",
        "roleAssignmentName": "[ guid(concat(parameters('deploymentName'), resourceGroup().id, subscription().subscriptionId)) ]",
        "securityGroupName": "[concat(parameters('deploymentName'), '-security-group')]",
        "virtualNetworkName": "***",
        "masterIpName": "[concat(parameters('deploymentName'), '-mdw-ip')]",
        "subnetName": "***",
        "availabilitySetName": "GPLUM",
        "subnetId": "[resourceId('RG-MPG-A1-PRD-Networking-Shared', 'Microsoft.Network/virtualNetworks/subnets', '***', '***')]",
        "securityGroupId": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('securityGroupName'))]",
        "availabilitySetId": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]",
        "publicIpAddressId": {
            "ip-mdw": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('masterIpName'))]"
            }
        },
        "adminPassword": "[uniqueString(parameters('newGuid'))]",
        "imageReference": {
            "dev": {
                "id": "[resourceId(parameters('devImageLocation'), 'Microsoft.Compute/images', parameters('devImage'))]"
            },
            "hourly": {
                "publisher": "pivotal",
                "offer": "pivotal-greenplum-images",
                "sku": "gp-hourly-v6_2_0",
                "version": "latest"
            },
            "byol": {
                "publisher": "pivotal",
                "offer": "pivotal-greenplum-images",
                "sku": "gp-byol-v6_2_0",
                "version": "latest"
            }
        },
        "plan": {
            "hourly": {
                "name": "gp-hourly-v6_2_0",
                "publisher": "pivotal",
                "product": "pivotal-greenplum-images"
            },
            "byol": {
                "name": "gp-byol-v6_2_0",
                "publisher": "pivotal",
                "product": "pivotal-greenplum-images"
            }
        },
        "diagnosticsStorageAccount": "[uniqueString(concat(subscription().subscriptionId, resourceGroup().id, parameters('deploymentName'), 'storage'))]",
        "contributorRoleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]"
    },
    "resources": [
        {
            "apiVersion": "2019-10-01",
            "name": "pid-b88042a4-eb63-5fe8-a9e7-9426053ac52f",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            }
        },
        {
            "apiVersion": "2019-04-01-preview",
            "type": "Microsoft.Authorization/roleAssignments",
            "name": "[variables('roleAssignmentName')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('deploymentName'), '-mdw')]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('contributorRoleDefinitionId')]",
                "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines', concat(parameters('deploymentName'), '-mdw')), '2019-03-01', 'Full').identity.principalId]",
                "scope": "[resourceGroup().Id]"
            }
        },
        {
            "condition": "[equals(parameters('internetAccess'), 'True')]",
            "comments": "Public IP Address are only assigned to the Master",
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[variables('masterIpName')]",
            "location": "[parameters('location')]",
            "apiVersion": "2019-11-01",
            "properties": {
                "publicIpAllocationMethod": "Static",
                "idleTimeoutInMinutes": 30
            },
            "sku": {
                "name": "Basic"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('deploymentName'), '-mdw-nic')]",
            "apiVersion": "2019-11-01",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "eth1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            },
                            "privateIpAllocationMethod": "Dynamic",
                            "publicIPAddress": "[if(equals(parameters('internetAccess'), 'True'), variables('publicIpAddressId')['ip-mdw'], json('null'))]"
                        }
                    }
                ],
                "enableAcceleratedNetworking": "[variables('instanceSettings')[parameters('masterInstanceType')].enableAcceleratedNetworking]"
            }
        },
        {
            "condition": "[not(equals(parameters('segmentInstanceCount'), 0))]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('deploymentName'), '-sdw', copyIndex(1), '-nic')]",
            "apiVersion": "2019-11-01",
            "location": "[parameters('location')]",
            "copy": {
                "name": "networkInterfacesLoop",
                "count": "[variables('segmentCopyCount')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "eth1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            },
                            "privateIpAllocationMethod": "Dynamic"
                        }
                    }
                ],
                "enableAcceleratedNetworking": "[variables('instanceSettings')[parameters('segmentInstanceType')].enableAcceleratedNetworking]"
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('availabilitySetName')]",
            "apiVersion": "2019-07-01",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformFaultDomainCount": "2",
                "platformUpdateDomainCount": "5"
            }
        },
        {
            "apiVersion": "2019-04-01",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('diagnosticsStorageAccount')]",
            "location": "[parameters('location')]",
            "tags": {
                "deploymentName": "[parameters('deploymentName')]"
            },
            "kind": "Storage",
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {}
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('deploymentName'), '-mdw')]",
            "apiVersion": "2019-07-01",
            "location": "[parameters('location')]",
            "plan": "[if(equals(parameters('offerType'), 'dev'), json('null'), variables('plan')[parameters('offerType')])]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('deploymentName'), '-mdw-nic')]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccount'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[variables('availabilitySetId')]"
                },
                "osProfile": {
                    "computername": "mdw",
                    "adminUsername": "[variables('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "true",
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('masterInstanceType')]"
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')[parameters('offerType')]]",
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('dataDiskTypeMapping')[parameters('dataDiskType')].storageAccountType]"
                        }
                    },
                    "copy": [
                        {
                            "name": "dataDisks",
                            "count": "[variables('masterDataDisks')]",
                            "input": {
                                "lun": "[copyIndex('dataDisks')]",
                                "diskSizeGB": "[parameters('masterDiskSize')]",
                                "createOption": "Empty",
                                "managedDisk": {
                                    "storageAccountType": "[variables('dataDiskTypeMapping')[parameters('dataDiskType')].storageAccountType]"
                                }
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('deploymentName'), '-mdw-nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[reference(variables('diagnosticsStorageAccount')).primaryEndpoints['blob']]"
                    }
                }
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "resources": [
                {
                    "type": "extensions",
                    "apiVersion": "2019-07-01",
                    "name": "ext-mdw",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', concat(parameters('deploymentName'), '-mdw'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "commandToExecute": "[concat( 'echo \"ADMIN=\\\"', variables('adminUsername'), '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"DATABASE_VERSION=\\\"', parameters('databaseVersion'), '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"DATABASE_NAME=\\\"', parameters('databaseName'), '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"RELEASE_URL=\\\"', variables('releaseURL'), '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"RESOURCE_GROUP=\\\"', resourceGroup().name, '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"REPLACED_NODE=\\\"', '0', '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"INSTANCE_COUNT=\\\"', variables('instanceCount'), '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"MASTER_RAID_GROUPS=\\\"', variables('masterRaidGroups'), '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"SEGMENT_RAID_GROUPS=\\\"', variables('segmentRaidGroups'), '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"GP_VMEM_PROTECT_LIMIT=\\\"', variables('gpVmemProtectLimit'), '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"GPDB_SEGMENTS_PER_HOST=\\\"', variables('gpdbSegmentsPerHost'), '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"INSTALL_PHPPGADMIN=\\\"Install\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"INSTALL_GPCC=\\\"Install\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"INSTALL_DSPYTHON=\\\"Skip\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"INSTALL_DSR=\\\"Skip\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"INSTALL_GPCC=\\\"Skip\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"INSTALL_MADLIB=\\\"Skip\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"INSTALL_PLR=\\\"Skip\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"INSTALL_POSTGIS=\\\"Skip\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"INSTALL_PLCONTAINER=\\\"Skip\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"GPADMIN_PASSWORD=\\\"', variables('adminPassword'), '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"DEPLOYMENT_NAME=\\\"', parameters('deploymentName'), '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', '/opt/pivotal/greenplum/rollout.sh &> /opt/pivotal/greenplum/rollout.log' )]"
                        }
                    }
                }
            ]
        },
        {
            "condition": "[not(equals(parameters('segmentInstanceCount'), 0))]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('deploymentName'), '-sdw', copyIndex(1))]",
            "apiVersion": "2019-07-01",
            "location": "[parameters('location')]",
            "plan": "[if(equals(parameters('offerType'), 'dev'), json('null'), variables('plan')[parameters('offerType')])]",
            "copy": {
                "name": "instanceLoop",
                "count": "[variables('segmentCopyCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('deploymentName'), '-sdw', copyIndex(1), '-nic')]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccount'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[variables('availabilitySetId')]"
                },
                "osProfile": {
                    "computername": "[concat('sdw', copyIndex(1))]",
                    "adminUsername": "[variables('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "true",
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('segmentInstanceType')]"
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')[parameters('offerType')]]",
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('dataDiskTypeMapping')[parameters('dataDiskType')].storageAccountType]"
                        }
                    },
                    "copy": [
                        {
                            "name": "dataDisks",
                            "count": "[variables('segmentDataDisks')]",
                            "input": {
                                "lun": "[copyIndex('dataDisks')]",
                                "diskSizeGB": "[parameters('segmentDiskSize')]",
                                "createOption": "Empty",
                                "managedDisk": {
                                    "storageAccountType": "[variables('dataDiskTypeMapping')[parameters('dataDiskType')].storageAccountType]"
                                }
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('deploymentName'), '-sdw', copyIndex(1), '-nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[reference(variables('diagnosticsStorageAccount')).primaryEndpoints['blob']]"
                    }
                }
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "resources": [
                {
                    "condition": "[not(equals(parameters('segmentInstanceCount'), 0))]",
                    "type": "extensions",
                    "apiVersion": "2019-07-01",
                    "name": "[concat('ext-sdw', copyIndex(1))]",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', concat(parameters('deploymentName'), '-sdw', copyIndex(1)))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "commandToExecute": "[concat( 'echo \"ADMIN=\\\"', variables('adminUsername'), '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"DATABASE_VERSION=\\\"', parameters('databaseVersion'), '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"DATABASE_NAME=\\\"', parameters('databaseName'), '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"RELEASE_URL=\\\"', variables('releaseURL'), '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"RESOURCE_GROUP=\\\"', resourceGroup().name, '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"REPLACED_NODE=\\\"', '0', '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"INSTANCE_COUNT=\\\"', variables('instanceCount'), '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"MASTER_RAID_GROUPS=\\\"', variables('masterRaidGroups'), '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"SEGMENT_RAID_GROUPS=\\\"', variables('segmentRaidGroups'), '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"GP_VMEM_PROTECT_LIMIT=\\\"', variables('gpVmemProtectLimit'), '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"GPDB_SEGMENTS_PER_HOST=\\\"', variables('gpdbSegmentsPerHost'), '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"INSTALL_PHPPGADMIN=\\\"Install\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"INSTALL_GPCC=\\\"Install\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"INSTALL_DSPYTHON=\\\"Skip\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"INSTALL_DSR=\\\"Skip\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"INSTALL_GPCC=\\\"Skip\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"INSTALL_MADLIB=\\\"Skip\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"INSTALL_PLR=\\\"Skip\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"INSTALL_POSTGIS=\\\"Skip\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"INSTALL_PLCONTAINER=\\\"Skip\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"GPADMIN_PASSWORD=\\\"', variables('adminPassword'), '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', 'echo \"DEPLOYMENT_NAME=\\\"', parameters('deploymentName'), '\\\"\" >> /opt/pivotal/greenplum/variables.sh', '\n', '/opt/pivotal/greenplum/rollout.sh &> /opt/pivotal/greenplum/rollout.log' )]"
                        }
                    }
                }
            ]
        }
    ],
    "outputs": {
        "Database Admin UserName": {
            "type": "string",
            "value": "gpadmin"
        },
        "Command Center UserName": {
            "type": "string",
            "value": "gpmon"
        },
        "Master Host": {
            "type": "string",
            "value": "[if(equals(parameters('internetAccess'), 'True'), reference(resourceId('Microsoft.Network/publicIpAddresses/', variables('masterIpName'))).ipAddress, reference(concat(parameters('deploymentName'), '-mdw-nic')).ipConfigurations[0].properties.privateIPAddress)]"
        },
        "Database Port": {
            "type": "string",
            "value": "5432"
        },
        "Database Password": {
            "type": "string",
            "value": "ssh to the Master Host as gpadmin with your private key and cat ~/.pgpass"
        },
        "phpPgAdmin URL": {
            "type": "string",
            "value": "[if(equals(parameters('internetAccess'), 'True'), concat('http://', reference(resourceId('Microsoft.Network/publicIpAddresses/', variables('masterIpName'))).ipAddress, ':28090'), concat('http://', reference(concat(parameters('deploymentName'), '-mdw-nic')).ipConfigurations[0].properties.privateIPAddress, ':28090'))]"
        },
        "Command Center URL": {
            "type": "string",
            "value": "[if(equals(parameters('internetAccess'), 'True'), concat('http://', reference(resourceId('Microsoft.Network/publicIpAddresses/', variables('masterIpName'))).ipAddress, ':28080'), concat('http://', reference(concat(parameters('deploymentName'), '-mdw-nic')).ipConfigurations[0].properties.privateIPAddress, ':28080'))]"
        },
        "OptionalInstalls": {
            "type": "string",
            "value": "Install Optional Components with the gpoptional CLI utility. Log in as gpadmin and simply run gpoptional to install many commonly used optional components like MADlib and PL/Container."
        }
    }
}